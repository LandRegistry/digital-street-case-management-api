"""001_init

Revision ID: c37a41fc2b5e
Revises: 
Create Date: 2018-12-04 09:43:38.780781

"""
from alembic import context, op
from flask import current_app
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision = 'c37a41fc2b5e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('address_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('house_name_number', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('town_city', sa.String(), nullable=False),
    sa.Column('county', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('postcode', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('user',
    sa.Column('identity', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email_address', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], ),
    sa.PrimaryKeyConstraint('identity')
    )
    op.create_index(op.f('ix_user_email_address'), 'user', ['email_address'], unique=True)
    op.create_table('case',
    sa.Column('case_reference', sa.String(), nullable=False),
    sa.Column('case_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('title_number', sa.String(), nullable=True),
    sa.Column('assigned_staff_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('counterparty_id', sa.Integer(), nullable=False),
    sa.Column('counterparty_conveyancer_org', sa.String(), nullable=False),
    sa.Column('counterparty_conveyancer_contact_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['assigned_staff_id'], ['user.identity'], ),
    sa.ForeignKeyConstraint(['client_id'], ['user.identity'], ),
    sa.ForeignKeyConstraint(['counterparty_conveyancer_contact_id'], ['user.identity'], ),
    sa.ForeignKeyConstraint(['counterparty_id'], ['user.identity'], ),
    sa.PrimaryKeyConstraint('case_reference')
    )
    op.create_index(op.f('ix_case_created_at'), 'case', ['created_at'], unique=False)
    # ### end Alembic commands ###

    context.execute("GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE \"user\", \"case\", \"address\" TO " +
                    current_app.config.get('APP_SQL_USERNAME'))
    context.execute("GRANT USAGE ON SEQUENCE \"address_address_id_seq\" TO " +
                    current_app.config.get('APP_SQL_USERNAME'))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_case_created_at'), table_name='case')
    op.drop_table('case')
    op.drop_index(op.f('ix_user_email_address'), table_name='user')
    op.drop_table('user')
    op.drop_table('address')
    # ### end Alembic commands ###
